say_discretely:
  alias: Say discretely
  sequence:
    - service_template: >
        {% if is_state('media_player.master_bedroom', 'playing')
              or is_state('input_boolean.guest_mode', 'on')
              or is_state('input_boolean.speech_notifications', 'off') %}
          script.telegram_say
        {% else %}
          script.sonos_blast
        {% endif %}
      data_template:
        message: "{{ message }}"

sonos_blast:
  alias: Sonos blast
  sequence:
    - service: tts.amazon_polly_say
      data_template:
        entity_id: media_player.master_bedroom
        message: "{{ message }}"

sonos_say:
  alias: Sonos say
  sequence:
    - service: sonos.snapshot
      data_template:
        with_group: yes
        entity_id: media_player.master_bedroom
    - delay: "00:00:02"
    - service: script.sonos_blast
      data_template:
        message: "{{ message }}"
    - delay: "00:00:05"
    - service: sonos.restore
      data_template:
        with_group: yes
        entity_id: media_player.master_bedroom

telegram_say:
  alias: Telegram say
  sequence:
    - service: notify.telegram
      data_template:
        message: "{{ message }}"

sarah_talk:
  alias: SARAH - Talk
  sequence:
    - condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.sleep_mode
          state: "off"
        - condition: time
          after: "08:00:00"
          before: "23:59:00"
        - condition: state
          entity_id: input_boolean.speech_notifications
          state: "on"
    - service: script.say_discretely
      data_template:
        message: "{{ message }}"

sarah_briefing:
  alias: Briefing
  sequence:
    - service: script.sarah_talk
      data_template:
        message: !include ../templates/briefing.yaml
